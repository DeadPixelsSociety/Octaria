//--------------------------------------------------------------------------------------------------
// Package     : Octaria
// File        : Inputs.h
// Author      : PRADAL & co
// Platform    : All
// Description : Input handle
//--------------------------------------------------------------------------------------------------

#include "StdAfx.h"

//--------------------------------------------------------------------------------------------------
/// Constructor
//--------------------------------------------------------------------------------------------------
/*explicit*/ Inputs::Inputs(void)
: m_pUser(shNULL)
, m_bLeft(false)
, m_bRight(false)
, m_bUp(false)
, m_bDown(false)
, m_bJump(false)
{

}

//--------------------------------------------------------------------------------------------------
/// Destructor
//--------------------------------------------------------------------------------------------------
/*virtual*/ Inputs::~Inputs(void)
{
	m_pUser = shNULL;
}

//--------------------------------------------------------------------------------------------------
/// Initialize
//--------------------------------------------------------------------------------------------------
void Inputs::Initialize(ShUser * pUser)
{
	m_pUser = pUser;
}

//--------------------------------------------------------------------------------------------------
/// Release
//--------------------------------------------------------------------------------------------------
void Inputs::Release(void)
{
	m_pUser = shNULL;
}

//--------------------------------------------------------------------------------------------------
/// Called every frame to update inputs
//--------------------------------------------------------------------------------------------------
void Inputs::Update(void)
{
	if (shNULL != m_pUser)
	{
		m_bLeft		= ShUser::HasTriggeredAction(m_pUser, CShIdentifier("left"));
		m_bRight	= ShUser::HasTriggeredAction(m_pUser, CShIdentifier("right"));
		m_bUp		= ShUser::HasTriggeredAction(m_pUser, CShIdentifier("up"));
		m_bDown		= ShUser::HasTriggeredAction(m_pUser, CShIdentifier("down"));

		m_bJump		= ShUser::HasTriggeredAction(m_pUser, CShIdentifier("jump"));
	}
}

//--------------------------------------------------------------------------------------------------
/// @todo
//--------------------------------------------------------------------------------------------------
bool Inputs::IsLeftPressed(void)
{
	return m_bLeft;
}

//--------------------------------------------------------------------------------------------------
/// @todo
//--------------------------------------------------------------------------------------------------
bool Inputs::IsRightPressed(void)
{
	return m_bRight;
}

//--------------------------------------------------------------------------------------------------
/// @todo
//--------------------------------------------------------------------------------------------------
bool Inputs::IsUpPressed(void)
{
	return m_bUp;
}

//--------------------------------------------------------------------------------------------------
/// @todo
//--------------------------------------------------------------------------------------------------
bool Inputs::IsDownPressed(void)
{
	return m_bDown;
}

bool Inputs::IsJumpPressed(void)
{
	return m_bJump;
}
