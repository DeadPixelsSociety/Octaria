//--------------------------------------------------------------------------------------------------
// Standard material
//--------------------------------------------------------------------------------------------------

#pragma pack_matrix (row_major)     // sets default order to row major

//
// Includes
//
//#include "lib/platform.fxh"

//
// Transformations parameters
//
ConstantBuffer c1
{
	float4x4 WorldViewProjection;
};

//
// DiffuseColor Color
//
ConstantBuffer c2
{
	float4 DiffuseColor;
};

//
// Textures
//
Texture2D TextureMap : register(t0);
Texture2D TileSet : register(t1);

//
// Samplers
//
SamplerState TextureMapSampler : register(s0);
SamplerState TileSetSampler : register(s1);


//--------------------------------------------------------------------------------------------------
// Vertex shader input structure
//--------------------------------------------------------------------------------------------------
struct VS_INPUT
{
	float2	position	: POSITION;			// Vertex position
	float2  texcoord	: TEXCOORD0;		// Vertex Color
};

//--------------------------------------------------------------------------------------------------
// Vertex shader output structure
//--------------------------------------------------------------------------------------------------
struct VS_OUTPUT
{
	float4  position	: S_POSITION;		// Vertex position
	float2  texcoord	: TEXCOORD0;		// Vertex Color
};

//--------------------------------------------------------------------------------------------------
// 2D elements in clip-space [-1,+1] with position.xy and texcoord.xy
//--------------------------------------------------------------------------------------------------
VS_OUTPUT main(VS_INPUT vIn)
{
	//
	// Output structure declaration
	VS_OUTPUT vOut;

	//
	// Compute projected position
	vOut.position = mul(float4(vIn.position, 0.0, 1.0), WorldViewProjection);
	vOut.texcoord = vIn.texcoord;

	return vOut;
}
